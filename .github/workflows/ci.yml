name: ci

on:
#para push y pull request
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  # build y test ---
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          #reusa cache de los NuGet
          cache: true
          cache-dependency-path: |
            **/*.csproj
            **/global.json
            **/nuget.config

      - name: Restore
        run: dotnet restore NotasApi.sln

      - name: Build (Release)
        run: dotnet build NotasApi.sln -c Release --no-restore /p:ContinuousIntegrationBuild=true

      - name: Test (TRX + cobertura)
        run: |
          dotnet test NotasApi.sln -c Release --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=cobertura \
            /p:CoverletOutput=./TestResults/coverage/

      - name: Publicar artefactos de test
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/TestResults/*.trx
            **/TestResults/coverage/coverage.cobertura.xml
          if-no-files-found: ignore

  #Job 2: build y push docker
  docker:
    needs: build-and-test
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
